Robot type interface:

std::vector<std::pair<std::string, EigenHelpers::VectorVector3d>>& robot_links_points = robot.GetRawLinksPoints() const;
robot.UpdatePosition(configuration);
Eigen::Affine3d link_transform = robot.GetLinkTransform(const std::string& link_name) const;
Configuration config = robot.GetPosition() const;
double distance = robot.ComputeDistanceTo(const Configuration& target) const;
Eigen::VectorXd control_action = robot.GenerateControlAction(const Configuration& target, PRNG& rng);
robot.ApplyControlInput(const Eigen::VectorXd& input);
Eigen::Matrix<double, 3, Eigen::Dynamic> point_jacobian = robot.ComputeLinkPointJacobian(const std::string& link_name, const Eigen::Vector3d& link_relative_point) const;

Sampler type interface:

Configuration config = sampler.Sample(PRNG& rng);
